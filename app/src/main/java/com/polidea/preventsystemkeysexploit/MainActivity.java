package com.polidea.preventsystemkeysexploit;

import android.app.ActivityManager;
import android.content.Context;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.KeyEvent;
import android.view.View;
import android.view.WindowManager;

import java.lang.reflect.Field;

public class MainActivity extends AppCompatActivity {
    private final int PRIVATE_FLAG_PREVENT_SYSTEM_KEYS = 0x10000000;
    private final int PRIVATE_FLAG_PREVENT_POWER_KEY = 0x20000000;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void onButtonClick(View v) {
        WindowManager.LayoutParams attr = getWindow().getAttributes();

        try {
            Field privateFlagsField = attr.getClass().getDeclaredField("privateFlags");
            privateFlagsField.setInt(attr, (int) privateFlagsField.get(attr) |
                            PRIVATE_FLAG_PREVENT_SYSTEM_KEYS | PRIVATE_FLAG_PREVENT_POWER_KEY);

            // Just to easily call dispatchWindowAttributesChanged()
            getWindow().setFlags(0, 0);
        } catch (IllegalAccessException | NoSuchFieldException e) {
            e.printStackTrace();
        }
    }

    /*
     * "Block" other buttons just for example
     */

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        // Disable back
        return true;
    }

    @Override
    protected void onPause() {
        super.onPause();

        // "Disable" menu
        ActivityManager activityManager = (ActivityManager) getApplicationContext()
                .getSystemService(Context.ACTIVITY_SERVICE);
        activityManager.moveTaskToFront(getTaskId(), 0);
    }
}
